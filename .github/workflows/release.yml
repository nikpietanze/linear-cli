name: release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: "Tag to release (e.g. v0.1.1)"
        required: false

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout (current ref)
        if: ${{ inputs.version == '' }}
        uses: actions/checkout@v4
      - name: Checkout (tag input)
        if: ${{ inputs.version != '' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
      - name: Prepare
        run: |
          if [ -n "${{ inputs.version }}" ]; then echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV; else echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV; fi
          mkdir -p dist
      - name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          OUT="linear-cli"
          if [ "${{ matrix.goos }}" = "windows" ]; then OUT="linear-cli.exe"; fi
          go build -ldflags="-s -w -X 'linear-cli/cmd.buildVersion=${VERSION}' -X 'linear-cli/cmd.buildCommit=${GITHUB_SHA::7}'" -o "$OUT" .
          ARCHIVE="linear-cli_${{ env.VERSION }}_${{ matrix.goos }}_${{ matrix.goarch }}.tar.gz"
          tar -czf "dist/$ARCHIVE" "$OUT" LICENSE README.md
      - name: Generate release notes from CHANGELOG
        run: |
          set -euo pipefail
          if [ -f CHANGELOG.md ]; then
            awk -v ver="${VERSION}" '
              $0 ~ "^## \\"[" ver "\\\"]" {flag=1; next}
              /^## / && flag {exit}
              flag {print}
            ' CHANGELOG.md > RELEASE_NOTES.md || true
          fi
          if [ ! -s RELEASE_NOTES.md ]; then
            echo "linear-cli ${VERSION}" > NOTES.md
          else
            {
              echo "linear-cli ${VERSION}";
              echo;
              cat RELEASE_NOTES.md;
            } > NOTES.md
          fi
      - name: Upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.tar.gz
          tag_name: ${{ inputs.version }}
          body_path: NOTES.md
          fail_on_unmatched_files: false
          append_body: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
